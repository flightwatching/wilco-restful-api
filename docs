swagger: '2.0'
info:
  x-errors: []
  description: |
    This  API allows you to pull and push data with your WILCO deployment
    [https://github.com/flightwatching/wilco-api](https://github.com/flightwatching/wilco-api) or on 
    [www.flightwatching.com](www.flightwatching.com).
  version: 3.0.0
  title: WILCO API
  termsOfService: 'http://www.flightwatching.com/terms/'
  contact:
    email: contact@flightwatching.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: fwot
    description: A fwot is an entity that you are following
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
paths:
  /apiv3/dashboards:
    post:
      summary: creates the dashboard
      operationId: createDashboard
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DashboardV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/events/{eventId}/createAnalysis':
    post:
      summary: 'create an analysis from the event passed. should use insert message. see https://github.com/flightwatching/fleet-monitor/issues/55'
      operationId: createAnalysis
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: eventId
          in: path
          description: the id of the event
          required: true
          type: integer
          format: int64
        - name: content
          in: query
          description: the sumUp
          required: false
          type: string
        - name: ruleId
          in: query
          description: the id of the rule that has trigged the creation
          required: false
          type: integer
          format: int64
        - name: faultCode
          in: query
          description: the fault code if the analysis is linked to a fault code
          required: false
          type: string
        - name: d
          in: query
          description: 'the date where the analysis has to locate. if not set, the event computed date is used'
          required: false
          type: string
          format: date-time
        - name: severity
          in: query
          description: the severity of the analysis
          required: false
          type: string
          enum:
            - IGNORE
            - CREW
            - WARNING
            - FAULT
            - ERROR
            - INFO
        - name: flightPhase
          in: query
          description: ''
          required: false
          type: string
          enum:
            - PWRUP
            - GATEOUT
            - ENGON
            - TAXIOUT
            - FLYING
            - TAXIIN
            - GATEIN
            - CLOSED
      responses:
        '200':
          description: successful operation
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/{pluralCategory}/{reg}/location':
    put:
      summary: sets the fwot position
      operationId: updateFwotPosition
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: pluralCategory
          in: path
          description: the category of the fwot
          required: true
          type: string
        - name: reg
          in: path
          description: the registration of the fwot
          required: true
          type: string
        - name: regLog
          in: query
          description: the reg of a fwot that has lat/lon
          required: false
          type: string
        - name: lat
          in: query
          description: the lat of the fwot
          required: false
          type: number
          format: float
        - name: lon
          in: query
          description: the lon of the fwot
          required: false
          type: number
          format: float
        - name: alt
          in: query
          description: the alt of the fwot
          required: false
          type: number
          format: float
        - name: date
          in: query
          description: the pos date of the fwot
          required: false
          type: string
          format: date-time
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/FwotV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/dashboards/{dbid}/svg':
    post:
      summary: Returns the SVG for a dashboard
      operationId: createDashboardSvg
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: dbid
          in: path
          description: the id of the symbol
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: string
      security:
        - api_key_param: []
        - api_key_header: []
    get:
      summary: Returns the SVG for a dashboard
      operationId: getDashboardSvg
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: dbid
          in: path
          description: the id of the symbol
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: string
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/parameters/{actype}':
    get:
      summary: Returns all parameters for an fwot type
      operationId: getParameters_1
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: actype
          in: path
          description: the fwot type
          required: true
          type: string
        - name: name
          in: query
          description: the parameter names to filter on. May be null
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ParameterV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/{pluralCategory}/{reg}/events/{eventId}/prev':
    get:
      summary: Returns the previous events type as the given one
      operationId: getPreviousEvent
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: pluralCategory
          in: path
          description: the category of the fwot
          required: true
          type: string
        - name: reg
          in: path
          description: the registration of the fwot
          required: true
          type: string
        - name: eventId
          in: path
          description: the id of the event
          required: true
          type: integer
          format: int64
        - name: count
          in: query
          description: the count of returned messages
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/EventV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  /apiv3/trendbundles:
    get:
      summary: Returns list of trends stored in WILCO
      operationId: getTrends
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/TrendBundleV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
    post:
      summary: Returns list of trends stored in WILCO
      operationId: createTrends
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/TrendBundleV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/events/{eventId}/parameters/{name}':
    get:
      summary: 'Returns param for this name, in this event'
      operationId: getEventParam
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: category
          in: query
          description: the category of the fwot
          required: false
          type: string
        - name: reg
          in: query
          description: the registration of the fwot
          required: false
          type: string
        - name: eventId
          in: path
          description: the id of the event
          required: true
          type: integer
          format: int64
        - name: name
          in: path
          description: the name of the param
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ParameterV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  /apiv3/login:
    get:
      summary: login to be authenticated
      operationId: getLogin
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: username
          in: query
          description: the login to connect with. Is an email address
          required: true
          type: string
        - name: password
          in: query
          description: the password to connect with
          required: false
          type: string
        - name: remember
          in: query
          description: remember the connection information for 30 days
          required: false
          type: boolean
        - name: tnc
          in: query
          description: I do accept the terms and conditions
          required: true
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/UserV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  /apiv3/parameters:
    get:
      summary: Returns the parameters for the given search string
      operationId: getParameters
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: contains
          in: query
          description: the parameter name part to filter on
          required: false
          type: string
        - name: detailled
          in: query
          description: Do we return the head (false&default) or the complete description?
          required: false
          type: boolean
        - name: page
          in: query
          description: 'the page. starts #1'
          required: false
          type: integer
          format: int32
        - name: count
          in: query
          description: the max count of parameter
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ParameterV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
    post:
      summary: Returns the parameters for the given search string
      operationId: createParameters
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: contains
          in: query
          description: the parameter name part to filter on
          required: false
          type: string
        - name: detailled
          in: query
          description: Do we return the head (false&default) or the complete description?
          required: false
          type: boolean
        - name: page
          in: query
          description: 'the page. starts #1'
          required: false
          type: integer
          format: int32
        - name: count
          in: query
          description: the max count of parameter
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ParameterV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  /apiv3/ifts/test:
    post:
      summary: 'returns the logs for simulating the passed formula against past evtId. In the body you will need a json structure {formula:''<the formula>'', msgId:3652, language:JS_NODEJS}'
      operationId: createTestIft
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/IftV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  /apiv3/status:
    get:
      summary: check the status of the server
      operationId: GetStatus
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters: []
      responses:
        '200':
          description: successful operation
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/events/{eventId}/untag':
    put:
      summary: untags an event
      operationId: updateUnTag
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: eventId
          in: path
          description: the id of the event
          required: true
          type: integer
          format: int64
        - name: tag
          in: query
          description: the tag to remove
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/EventV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/{pluralCategory}/{reg}/events/{eventId}/raw':
    get:
      summary: returns the raw data for a message. empty string if not exists
      operationId: getRaw
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: pluralCategory
          in: path
          description: the category of the fwot
          required: true
          type: string
        - name: reg
          in: path
          description: the registration of the fwot
          required: true
          type: string
        - name: eventId
          in: path
          description: the id of the event
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: string
      security:
        - api_key_param: []
        - api_key_header: []
  /apiv3/fwots:
    post:
      summary: 'Returns all the fwots paginated. If the connected user has an airline, the list is filtered for this airline'
      operationId: createFwot
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/FwotV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
    get:
      summary: 'Returns all the fwots paginated. If the connected user has an airline, the list is filtered for this airline'
      operationId: getFwots_1
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: category
          in: query
          description: the category of the fwot
          required: true
          type: string
        - name: page
          in: query
          description: 'the page. starts #1'
          required: false
          type: integer
          format: int32
        - name: count
          in: query
          description: the max count of messages
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/FwotV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  /apiv3/samples:
    get:
      summary: Returns list of samples stored in WILCO
      operationId: getSamples
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: category
          in: query
          description: the category of the fwot
          required: false
          type: string
        - name: reg
          in: query
          description: 'if reg is null or empty, will be all the fwots'
          required: false
          type: string
        - name: actype
          in: query
          description: fwot type
          required: false
          type: string
        - name: name
          in: query
          description: the parameter name. May be several
          required: false
          type: string
        - name: from
          in: query
          description: the date from which we want to get the samples
          required: false
          type: string
          format: date-time
        - name: to
          in: query
          description: the date to which we want to get the samples
          required: false
          type: string
          format: date-time
        - name: page
          in: query
          description: 'the page. starts #1'
          required: false
          type: integer
          format: int32
        - name: count
          in: query
          description: the max count of messages
          required: false
          type: integer
          format: int32
        - name: withInvalid
          in: query
          description: 'default/false: include not VALID state samples. true -> include them'
          required: false
          type: boolean
        - name: format
          in: query
          description: json or csv or tsv
          required: false
          type: string
        - name: chronological
          in: query
          description: 'if false: from newest to oldest'
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SampleV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  /apiv3/config:
    get:
      summary: check the status of the server
      operationId: GetConfig
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters: []
      responses:
        '200':
          description: successful operation
      security:
        - api_key_param: []
        - api_key_header: []
  /apiv3/acars:
    post:
      summary: 'posts some raw data. if the decoder is not passed, then they are tried to find the first matching one'
      operationId: PostAcars
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: parserName
          in: query
          description: the name of the parser
          required: false
          type: string
        - name: webhook
          in: query
          description: 'if defined, the query returns immediately and calls the webhook when finished with the event as JSON'
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/EventV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/dashboards/{dbid}/rules/{id}':
    get:
      summary: Returns the dashboard rule
      operationId: getDashboardRule_1
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: dbid
          in: path
          description: the id of the dashboard
          required: true
          type: integer
          format: int64
        - name: id
          in: path
          description: the id of the dashboard rule
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/RuleV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
    put:
      summary: modifies the dashboard rule
      operationId: updateDashboardRule
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: dbid
          in: path
          description: the id of the dashboard
          required: true
          type: integer
          format: int64
        - name: id
          in: path
          description: the id of the dashboard rule
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/RuleV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
    delete:
      summary: deletes the dashboard rule
      operationId: deleteDashboardRule
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: dbid
          in: path
          description: the id of the dashboard
          required: true
          type: integer
          format: int64
        - name: id
          in: path
          description: the id of the dashboard rule
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/RuleV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/parameters/{id}':
    get:
      summary: returns a parameter. You can PUT or GET. DELETE not yet supported
      operationId: getParameter
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: id
          in: path
          description: the id of the parameters to filter on.
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ParameterV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
    put:
      summary: returns a parameter. You can PUT or GET. DELETE not yet supported
      operationId: updateParameter
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: id
          in: path
          description: the id of the parameters to filter on.
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ParameterV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
    delete:
      summary: returns a parameter. You can PUT or GET. DELETE not yet supported
      operationId: deleteParameter
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: id
          in: path
          description: the id of the parameters to filter on.
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ParameterV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/bookmarks/{bookmark}/photo':
    get:
      summary: Returns the bookmark image
      operationId: getBookmark
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: bookmark
          in: path
          description: the id of the bookmark
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/dashboards/{dbid}':
    delete:
      summary: trashes the dashboard
      operationId: DeleteDashboardsDbid
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: dbid
          in: path
          description: the id of the dashboard
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/RuleV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  /apiv3/profile:
    get:
      summary: Returns profile of the current user
      operationId: getUser
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/UserV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/{pluralCategory}/{reg}/events':
    get:
      summary: Returns some events of an fwot according to some filters
      operationId: getFwotEvents_1
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: pluralCategory
          in: path
          description: the category of the fwot
          required: true
          type: string
        - name: reg
          in: path
          description: the registration of the fwot
          required: true
          type: string
        - name: from
          in: query
          description: the date from which we want to get the events (strict gt -> does not include exact same date
          required: false
          type: string
          format: date-time
        - name: to
          in: query
          description: the date to which we want to get the events (strict lt -> does not include exact same date
          required: false
          type: string
          format: date-time
        - name: withDismissed
          in: query
          description: show the dismissed events
          required: false
          type: boolean
        - name: showHidden
          in: query
          description: show the non visible events
          required: false
          type: boolean
        - name: important
          in: query
          description: only important events
          required: false
          type: boolean
        - name: sev
          in: query
          description: only important events
          required: false
          type: string
        - name: tag
          in: query
          description: only events matching the given tag. Can have several tags in the request
          required: false
          type: string
        - name: count
          in: query
          description: the max count of messages
          required: false
          type: integer
          format: int32
        - name: after
          in: query
          description: the timestamp after which we want the elements
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/EventV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/dashboards/rules/{id}':
    get:
      summary: Returns the dashboard rule
      operationId: getDashboardRule
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: dbid
          in: query
          description: the id of the dashboard
          required: false
          type: integer
          format: int64
        - name: id
          in: path
          description: the id of the dashboard rule
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/RuleV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/events/{eventId}':
    get:
      summary: Returns an event from the ID
      operationId: getEvent
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: category
          in: query
          description: the category of the fwot
          required: false
          type: string
        - name: reg
          in: query
          description: the registration of the fwot
          required: false
          type: string
        - name: eventId
          in: path
          description: the id of the event
          required: true
          type: integer
          format: int64
        - name: nested
          in: query
          description: do we create a nested JSON (samples+A/C+...)
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/EventV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
    put:
      summary: Returns an event from the ID
      operationId: updateEvent
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: category
          in: query
          description: the category of the fwot
          required: false
          type: string
        - name: reg
          in: query
          description: the registration of the fwot
          required: false
          type: string
        - name: eventId
          in: path
          description: the id of the event
          required: true
          type: integer
          format: int64
        - name: nested
          in: query
          description: do we create a nested JSON (samples+A/C+...)
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/EventV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
    delete:
      summary: Returns an event from the ID
      operationId: deleteEvent
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: category
          in: query
          description: the category of the fwot
          required: false
          type: string
        - name: reg
          in: query
          description: the registration of the fwot
          required: false
          type: string
        - name: eventId
          in: path
          description: the id of the event
          required: true
          type: integer
          format: int64
        - name: nested
          in: query
          description: do we create a nested JSON (samples+A/C+...)
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/EventV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/acars/{parserName}':
    post:
      summary: 'posts some raw data. if the decoder is not passed, then they are tried to find the first matching one'
      operationId: PostAcarsParserName
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: parserName
          in: path
          description: the name of the parser
          required: true
          type: string
        - name: webhook
          in: query
          description: 'if defined, the query returns immediately and calls the webhook when finished with the event as JSON'
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/EventV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/{pluralCategory}/{reg}/photo':
    get:
      summary: Returns the fwot image
      operationId: getFwotImage
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: pluralCategory
          in: path
          description: the category of the fwot
          required: true
          type: string
        - name: reg
          in: path
          description: the registration of the fwot
          required: true
          type: string
      responses:
        '200':
          description: successful operation
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/events/{eventId}/reprocess/batch':
    put:
      summary: 'allows to reprocess all the events with the same layout. It deletes and recreates the matching messages, samples and analysis. THIS CAN BE VEEERRY LONG and DANGEROUS. It processes the last week only taking the event date as ref date'
      operationId: updateBatchReprocess
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: eventId
          in: path
          description: the id of the event
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/{pluralCategory}/{reg}/events/{eventId}':
    get:
      summary: Returns an event from the ID
      operationId: getEvent_1
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: pluralCategory
          in: path
          description: the category of the fwot
          required: true
          type: string
        - name: reg
          in: path
          description: the registration of the fwot
          required: true
          type: string
        - name: eventId
          in: path
          description: the id of the event
          required: true
          type: integer
          format: int64
        - name: nested
          in: query
          description: do we create a nested JSON (samples+A/C+...)
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/EventV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/events/{eventId}/tag':
    put:
      summary: tags an event
      operationId: updateTag
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: eventId
          in: path
          description: the id of the event
          required: true
          type: integer
          format: int64
        - name: tag
          in: query
          description: the tag to set
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/EventV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/layouts/{pullLayoutId}/test':
    post:
      summary: 'Calls the URL service and simulates the call to the IFT with the returned content in the right variable. In the body you will need a json structure {formula:''<the formula>''}'
      operationId: createSimulatePushPull
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: pullLayoutId
          in: path
          description: the id of the pull layout
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/dashboards/{id}':
    put:
      summary: modifies the dashboard
      operationId: updateDashboard
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: id
          in: path
          description: the id of the dashboard
          required: true
          type: integer
          format: int64
        - name: skipSymbols
          in: query
          description: do not update symbols
          required: true
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DashboardV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
    get:
      summary: Returns the dashboard
      operationId: getDashboard
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: id
          in: path
          description: the id of the dashboard
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DashboardV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  /apiv3/categories:
    get:
      summary: Returns all the categories
      operationId: getCategories
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            type: string
      security:
        - api_key_param: []
        - api_key_header: []
  /apiv3/constants:
    get:
      summary: Returns all the constants
      operationId: getConstants
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ConstantV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/samples/{sampleId}':
    get:
      summary: Returns a sample
      operationId: getSample
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: sampleId
          in: path
          description: the id of the sample
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SampleV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/events/{eventId}/parameters':
    get:
      summary: Returns the params involved in an event
      operationId: getEventParams
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: category
          in: query
          description: the category of the fwot
          required: false
          type: string
        - name: reg
          in: query
          description: the registration of the fwot
          required: false
          type: string
        - name: eventId
          in: path
          description: the id of the event
          required: true
          type: integer
          format: int64
        - name: name
          in: query
          description: the name of the param
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ParameterV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/trendbundles/{bundleId}':
    get:
      summary: 'get, update or delete a trend'
      operationId: getTrend
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: bundleId
          in: path
          description: the id of the bundle
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/TrendBundleV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
    delete:
      summary: 'get, update or delete a trend'
      operationId: deleteTrend
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: bundleId
          in: path
          description: the id of the bundle
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/TrendBundleV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
    put:
      summary: 'get, update or delete a trend'
      operationId: updateTrend
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: bundleId
          in: path
          description: the id of the bundle
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/TrendBundleV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/ifts/{category}':
    get:
      summary: 'Returns the ifts for faultcodes, layouts, parameters or robots'
      operationId: getIfts_1
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: category
          in: path
          description: 'category of the IFT: faultcodes, layouts, parameters, robots'
          required: true
          type: string
        - name: contains
          in: query
          description: a string contained by the formula
          required: false
          type: string
        - name: page
          in: query
          description: 'the page. starts #1'
          required: false
          type: integer
          format: int32
        - name: count
          in: query
          description: the max count of faultcodes
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/IftV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/events/{eventId}/samples':
    get:
      summary: Returns the samples of an event
      operationId: getEventSamples
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: category
          in: query
          description: the category of the fwot
          required: false
          type: string
        - name: reg
          in: query
          description: the registration of the fwot
          required: false
          type: string
        - name: eventId
          in: path
          description: the id of the event
          required: true
          type: integer
          format: int64
        - name: format
          in: query
          description: "\t or json. default is json"
          required: false
          type: string
        - name: from
          in: query
          description: the min date for the sample
          required: false
          type: string
          format: date-time
        - name: to
          in: query
          description: the max date for the sample
          required: false
          type: string
          format: date-time
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SampleV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
    post:
      summary: Returns the samples of an event
      operationId: createEventSamples
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: category
          in: query
          description: the category of the fwot
          required: false
          type: string
        - name: reg
          in: query
          description: the registration of the fwot
          required: false
          type: string
        - name: eventId
          in: path
          description: the id of the event
          required: true
          type: integer
          format: int64
        - name: format
          in: query
          description: "\t or json. default is json"
          required: false
          type: string
        - name: from
          in: query
          description: the min date for the sample
          required: false
          type: string
          format: date-time
        - name: to
          in: query
          description: the max date for the sample
          required: false
          type: string
          format: date-time
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SampleV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  /apiv3/stats:
    get:
      summary: fetches some statistics on the running server
      operationId: getStats
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: from
          in: query
          description: the computed date from which we want to get the events
          required: false
          type: string
          format: date-time
        - name: to
          in: query
          description: the computed date to which we want to get the events
          required: false
          type: string
          format: date-time
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/StatsV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/{pluralCategory}/{reg}/events/{eventId}/next':
    get:
      summary: Returns the next events type as the given one
      operationId: getNextEvent
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: pluralCategory
          in: path
          description: the category of the fwot
          required: true
          type: string
        - name: reg
          in: path
          description: the registration of the fwot
          required: true
          type: string
        - name: eventId
          in: path
          description: the id of the event
          required: true
          type: integer
          format: int64
        - name: count
          in: query
          description: the count of returned messages
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/EventV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  /apiv3/ifts:
    get:
      summary: 'Returns the ifts for faultcodes, layouts, parameters or robots'
      operationId: getIfts
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: category
          in: query
          description: 'category of the IFT: faultcodes, layouts, parameters, robots'
          required: false
          type: string
        - name: contains
          in: query
          description: a string contained by the formula
          required: false
          type: string
        - name: page
          in: query
          description: 'the page. starts #1'
          required: false
          type: integer
          format: int32
        - name: count
          in: query
          description: the max count of faultcodes
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/IftV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/{pluralCategory}/{reg}/events/{eventId}/toggle':
    post:
      summary: Updates an event
      operationId: createToggleEvent_1
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: pluralCategory
          in: path
          description: the category of the fwot
          required: true
          type: string
        - name: reg
          in: path
          description: the registration of the fwot
          required: true
          type: string
        - name: eventId
          in: path
          description: the id of the event
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/EventV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/{pluralCategory}/{reg}/samples/{name}':
    get:
      summary: Returns list of samples stored in WILCO
      operationId: getSamples_2
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: pluralCategory
          in: path
          description: the category of the fwot
          required: true
          type: string
        - name: reg
          in: path
          description: 'if reg is null or empty, will be all the fwots'
          required: true
          type: string
        - name: actype
          in: query
          description: fwot type
          required: false
          type: string
        - name: name
          in: path
          description: the parameter name. May be several
          required: true
          type: string
        - name: from
          in: query
          description: the date from which we want to get the samples
          required: false
          type: string
          format: date-time
        - name: to
          in: query
          description: the date to which we want to get the samples
          required: false
          type: string
          format: date-time
        - name: page
          in: query
          description: 'the page. starts #1'
          required: false
          type: integer
          format: int32
        - name: count
          in: query
          description: the max count of messages
          required: false
          type: integer
          format: int32
        - name: withInvalid
          in: query
          description: 'default/false: include not VALID state samples. true -> include them'
          required: false
          type: boolean
        - name: format
          in: query
          description: json or csv or tsv
          required: false
          type: string
        - name: chronological
          in: query
          description: 'if false: from newest to oldest'
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SampleV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/{pluralCategory}':
    get:
      summary: 'Returns all the fwots paginated. If the connected user has an airline, the list is filtered for this airline'
      operationId: getFwots
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: pluralCategory
          in: path
          description: the category of the fwot
          required: true
          type: string
        - name: page
          in: query
          description: 'the page. starts #1'
          required: false
          type: integer
          format: int32
        - name: count
          in: query
          description: the max count of messages
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/FwotV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/symbols/{symbolId}/svgExample':
    get:
      summary: Returns the SVG example for a symbol
      operationId: getSymbolSvgExample
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: symbolId
          in: path
          description: the id of the symbol
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: string
      security:
        - api_key_param: []
        - api_key_header: []
    post:
      summary: Returns the SVG example for a symbol
      operationId: createSymbolSvgExample
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: symbolId
          in: path
          description: the id of the symbol
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: string
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/layouts/{layoutId}/uplink':
    post:
      summary: uplink the with the layout
      operationId: createUplink
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: reg
          in: query
          description: the registration of the fwot
          required: true
          type: string
        - name: layoutId
          in: path
          description: the ID of the layout to uplink
          required: true
          type: integer
          format: int64
        - name: delay
          in: query
          description: delay in seconds before the actual uplink
          required: false
          type: integer
          format: int32
        - name: ruleId
          in: query
          description: 'the id of the rule that trigged the uplink. if null, the user is considered'
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
      security:
        - api_key_param: []
        - api_key_header: []
  /apiv3/insertMessage:
    put:
      summary: 'interface to update a message with the WILCO format. Deprecated. Use PUT:event'
      operationId: PutInsertMessage
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters: []
      responses:
        '200':
          description: successful operation
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/layouts/webhook/{webhookId}':
    post:
      summary: endpoint for push layouts webhooks
      operationId: createWebhook
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: webhookId
          in: path
          description: the uuid of the hook
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LayoutV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
    put:
      summary: endpoint for push layouts webhooks
      operationId: updateWebhook
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: webhookId
          in: path
          description: the uuid of the hook
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LayoutV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/events/last/{count}':
    get:
      summary: all last events
      operationId: getLastEvent
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: count
          in: path
          description: the max count of messages
          required: true
          type: integer
          format: int32
        - name: tags
          in: query
          description: the list of filtering tags
          required: false
          type: string
        - name: sev
          in: query
          description: the list of filtering severity
          required: false
          type: string
        - name: dismissed
          in: query
          description: filter if dismissed or not dismissed or no filter if not set
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/EventV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/{pluralCategory}/{reg}/events/{eventId}/samples':
    get:
      summary: Returns the samples of an event
      operationId: getEventSamples_1
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: pluralCategory
          in: path
          description: the category of the fwot
          required: true
          type: string
        - name: reg
          in: path
          description: the registration of the fwot
          required: true
          type: string
        - name: eventId
          in: path
          description: the id of the event
          required: true
          type: integer
          format: int64
        - name: format
          in: query
          description: "\t or json. default is json"
          required: false
          type: string
        - name: from
          in: query
          description: the min date for the sample
          required: false
          type: string
          format: date-time
        - name: to
          in: query
          description: the max date for the sample
          required: false
          type: string
          format: date-time
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SampleV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/dashboards/{dbid}/rules':
    post:
      summary: creates a dashboard rule
      operationId: createDashboardRule
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: dbid
          in: path
          description: the id of the dashboard
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/RuleV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  /apiv3/symbols:
    get:
      summary: Returns all the dashboard symbols
      operationId: getDashboardSymbols
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DashboardSymbolV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
    put:
      summary: Returns all the dashboard symbols
      operationId: updateDashboardSymbols
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DashboardSymbolV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
    post:
      summary: Returns all the dashboard symbols
      operationId: createDashboardSymbols
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DashboardSymbolV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
    delete:
      summary: Returns all the dashboard symbols
      operationId: deleteDashboardSymbols
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DashboardSymbolV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/{pluralCategory}/{reg}':
    get:
      summary: Returns the fwot
      operationId: getFwot
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: pluralCategory
          in: path
          description: the category of the fwot
          required: true
          type: string
        - name: reg
          in: path
          description: the registration of the fwot
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/FwotV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
    put:
      summary: Updates the fwot
      operationId: updateFwot
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: pluralCategory
          in: path
          description: the category of the fwot
          required: true
          type: string
        - name: reg
          in: path
          description: the registration of the fwot
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/FwotV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/layouts/{layoutId}':
    get:
      summary: Returns a layout stored in WILCO
      operationId: getLayout
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: layoutId
          in: path
          description: the id of the layout
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LayoutV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
    post:
      summary: modifies a layout stored in WILCO
      operationId: createLayout
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: layoutId
          in: path
          description: the id of the layout
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LayoutV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
    delete:
      summary: marks a layout as trashed
      operationId: deleteLayout
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: layoutId
          in: path
          description: the id of the layout
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LayoutV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  /apiv3/TnCs.html:
    get:
      summary: returns the HTML for the terms and conditions
      operationId: getTermsAndConditions
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters: []
      responses:
        '200':
          description: successful operation
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/{pluralCategory}/{reg}/property':
    post:
      summary: 'add a new property to the fwot. If null passed in the value arg, the prop is removed'
      operationId: createFwotProperty
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: pluralCategory
          in: path
          description: the category of the fwot
          required: true
          type: string
        - name: reg
          in: path
          description: the registration of the fwot
          required: true
          type: string
        - name: name
          in: query
          description: the name of the property
          required: true
          type: string
        - name: value
          in: query
          description: 'the value of the property. if null, the prop is removed'
          required: false
          type: string
      responses:
        '200':
          description: successful operation
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/{pluralCategory}/{reg}/parameters/{name}':
    get:
      summary: Returns the parameter
      operationId: getParameter_2
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: pluralCategory
          in: path
          description: the category of the fwot
          required: true
          type: string
        - name: actype
          in: query
          description: the fwot type. You will need either a actype or a reg for this request
          required: false
          type: string
        - name: reg
          in: path
          description: the fwot reg. You will need either a actype or a reg for this request
          required: true
          type: string
        - name: name
          in: path
          description: the name of the parameter
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ParameterV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/events/{eventId}/layout':
    post:
      summary: Creates a layout from a message
      operationId: createLayoutEvent
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: eventId
          in: path
          description: the id of the event from which we create the layout
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LayoutV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  /apiv3/events/listenNewMessages:
    get:
      summary: 'The method blocks until something happends in the message queue: creation, new message, fault, rule detected something, user did something (manual close, clear, recall warning...). no more than 100 messages from the after parameter'
      operationId: getBlockingListen
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: after
          in: query
          description: 'the timestamp after which we want the elements. if no value, use current time'
          required: false
          type: integer
          format: int64
        - name: blockDuration
          in: query
          description: 'how many seconds this method blocks before releasing if no event. if no value, blocks 10s'
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/EventV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/{pluralCategory}/{reg}/samples':
    get:
      summary: Returns list of samples stored in WILCO
      operationId: getSamples_3
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: pluralCategory
          in: path
          description: the category of the fwot
          required: true
          type: string
        - name: reg
          in: path
          description: 'if reg is null or empty, will be all the fwots'
          required: true
          type: string
        - name: actype
          in: query
          description: fwot type
          required: false
          type: string
        - name: name
          in: query
          description: the parameter name. May be several
          required: false
          type: string
        - name: from
          in: query
          description: the date from which we want to get the samples
          required: false
          type: string
          format: date-time
        - name: to
          in: query
          description: the date to which we want to get the samples
          required: false
          type: string
          format: date-time
        - name: page
          in: query
          description: 'the page. starts #1'
          required: false
          type: integer
          format: int32
        - name: count
          in: query
          description: the max count of messages
          required: false
          type: integer
          format: int32
        - name: withInvalid
          in: query
          description: 'default/false: include not VALID state samples. true -> include them'
          required: false
          type: boolean
        - name: format
          in: query
          description: json or csv or tsv
          required: false
          type: string
        - name: chronological
          in: query
          description: 'if false: from newest to oldest'
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SampleV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/events/{eventId}/reprocess':
    put:
      summary: 'allows to reprocess the event. It deletes the message, samples and analysis and recomputes it'
      operationId: updateReprocess
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: eventId
          in: path
          description: the id of the event
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/{pluralCategory}/{reg}/refresh':
    get:
      summary: refresh the cache of the fwot
      operationId: GetPluralCategoryRegRefresh
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: pluralCategory
          in: path
          description: the category of the fwot
          required: true
          type: string
        - name: reg
          in: path
          description: the registration of the fwot
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/FwotV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  /apiv3/faultcodes:
    get:
      summary: Returns the fault codes for the given fwot type
      operationId: getFaultcodes
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: actype
          in: query
          description: the fwot type
          required: false
          type: string
        - name: prefix
          in: query
          description: the faultcode prefix (eg ATA)
          required: false
          type: string
        - name: page
          in: query
          description: 'the page. starts #1'
          required: false
          type: integer
          format: int32
        - name: count
          in: query
          description: the max count of faultcodes
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/IftV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
    post:
      summary: Creates a fault code from the body
      operationId: createFaultcode
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/IftV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/{pluralCategory}/{reg}/events/{eventId}/uplinkSame':
    post:
      summary: uplink the fwot to get the same message as the event passed.uplinks only if the event has an uplinkable layout
      operationId: createUplinkSame
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: pluralCategory
          in: path
          description: the category of the fwot
          required: true
          type: string
        - name: reg
          in: path
          description: the registration of the fwot
          required: true
          type: string
        - name: eventId
          in: path
          description: the id of the event
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/parameters/{actype}/{name}/samples':
    get:
      summary: Returns a sample csv table as required in dygraphs for the fwot type. It can be filtered on filter parameter values.
      operationId: getSamples_1
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: actype
          in: path
          description: the type of fwot
          required: true
          type: string
        - name: name
          in: path
          description: the parameter name
          required: true
          type: string
        - name: filterName
          in: query
          description: the parameter name used to filter
          required: false
          type: string
        - name: filterValue
          in: query
          description: the parameter name used to filter
          required: false
          type: string
        - name: format
          in: query
          description: json or csv or tsv
          required: false
          type: string
        - name: from
          in: query
          description: the date from which we want to get the samples
          required: false
          type: string
          format: date-time
        - name: to
          in: query
          description: the date to which we want to get the samples
          required: false
          type: string
          format: date-time
        - name: withInvalid
          in: query
          description: 'default/false: include not VALID state samples. true -> include them'
          required: false
          type: boolean
        - name: count
          in: query
          description: the max count of messages
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SampleV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  /apiv3/adminLinks:
    get:
      summary: returns a list of links to admin features
      operationId: getAdminLinks
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters: []
      responses:
        '200':
          description: successful operation
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/ifts/{id}':
    get:
      summary: updates (PUT) and/or returns(GET) the ift
      operationId: getIft
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: id
          in: path
          description: the ift ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/IftV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
    put:
      summary: updates (PUT) and/or returns(GET) the ift
      operationId: updateIft
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: id
          in: path
          description: the ift ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/IftV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  /apiv3/layouts:
    post:
      summary: Returns list of layouts stored in WILCO
      operationId: createLayouts
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: page
          in: query
          description: 'the page. starts #1'
          required: false
          type: integer
          format: int32
        - name: count
          in: query
          description: the max count of parameter
          required: false
          type: integer
          format: int32
        - name: contains
          in: query
          description: the layout name part to filter on
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LayoutV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
    get:
      summary: Returns list of layouts stored in WILCO
      operationId: getLayouts
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: page
          in: query
          description: 'the page. starts #1'
          required: false
          type: integer
          format: int32
        - name: count
          in: query
          description: the max count of parameter
          required: false
          type: integer
          format: int32
        - name: contains
          in: query
          description: the layout name part to filter on
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LayoutV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/parameters/{actype}/{name}':
    get:
      summary: Returns the parameter
      operationId: getParameter_1
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: category
          in: query
          description: the category of the fwot
          required: false
          type: string
        - name: actype
          in: path
          description: the fwot type. You will need either a actype or a reg for this request
          required: true
          type: string
        - name: reg
          in: query
          description: the fwot reg. You will need either a actype or a reg for this request
          required: false
          type: string
        - name: name
          in: path
          description: the name of the parameter
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ParameterV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/{pluralCategory}/{reg}/events/{eventId}/parameters':
    get:
      summary: Returns the params involved in an event
      operationId: getEventParams_1
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: pluralCategory
          in: path
          description: the category of the fwot
          required: true
          type: string
        - name: reg
          in: path
          description: the registration of the fwot
          required: true
          type: string
        - name: eventId
          in: path
          description: the id of the event
          required: true
          type: integer
          format: int64
        - name: name
          in: query
          description: the name of the param
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ParameterV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  /apiv3/users:
    get:
      summary: fetches the list of users
      operationId: getUsers
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/UserV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/symbols/{symbolId}':
    get:
      summary: 'Returns/create/updates all the dashboard symbols. to delete a symbol function, empty its name'
      operationId: getSymbol
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: symbolId
          in: path
          description: the id of the symbol
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DashboardSymbolV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
    put:
      summary: 'Returns/create/updates all the dashboard symbols. to delete a symbol function, empty its name'
      operationId: updateSymbol
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: symbolId
          in: path
          description: the id of the symbol
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DashboardSymbolV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
    post:
      summary: 'Returns/create/updates all the dashboard symbols. to delete a symbol function, empty its name'
      operationId: createSymbol
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: symbolId
          in: path
          description: the id of the symbol
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DashboardSymbolV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
    delete:
      summary: 'Returns/create/updates all the dashboard symbols. to delete a symbol function, empty its name'
      operationId: deleteSymbol
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: symbolId
          in: path
          description: the id of the symbol
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DashboardSymbolV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/layouts/{layoutId}/spider':
    get:
      summary: 'Tunnels the layout EXT URL. If not an ExternalSourceLayout, returns a BAD REQUEST '
      operationId: GetLayoutsLayoutIdSpider
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: layoutId
          in: path
          description: the id of the layout
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LayoutV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  /apiv3/bookmarks:
    get:
      summary: Returns list of bookmarks stored in WILCO
      operationId: getBookmarks
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/BookmarkV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/events/{eventId}/toggle':
    post:
      summary: Updates an event
      operationId: createToggleEvent
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: category
          in: query
          description: the category of the fwot
          required: false
          type: string
        - name: reg
          in: query
          description: the registration of the fwot
          required: false
          type: string
        - name: eventId
          in: path
          description: the id of the event
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/EventV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/{pluralCategory}/{reg}/events/last':
    get:
      summary: Returns the last event for a fwot
      operationId: getLastFwotEvent
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: pluralCategory
          in: path
          description: the category of the fwot
          required: true
          type: string
        - name: reg
          in: path
          description: the registration of the fwot
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/EventV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  /apiv3/logout:
    get:
      summary: log out from the current session
      operationId: getLogout
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ErrorDao'
      security:
        - api_key_param: []
        - api_key_header: []
  '/apiv3/{pluralCategory}/{reg}/events/{eventId}/parameters/{name}':
    get:
      summary: 'Returns param for this name, in this event'
      operationId: getEventParam_1
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: pluralCategory
          in: path
          description: the category of the fwot
          required: true
          type: string
        - name: reg
          in: path
          description: the registration of the fwot
          required: true
          type: string
        - name: eventId
          in: path
          description: the id of the event
          required: true
          type: integer
          format: int64
        - name: name
          in: path
          description: the name of the param
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ParameterV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
  /apiv3/events:
    post:
      summary: creates an event
      operationId: createEvent
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/EventV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
    get:
      summary: Returns some events of an fwot according to some filters
      operationId: getFwotEvents
      consumes:
        - application/json
      produces:
        - application/json
      deprecated: false
      parameters:
        - name: category
          in: query
          description: the category of the fwot
          required: false
          type: string
        - name: reg
          in: query
          description: the registration of the fwot
          required: false
          type: string
        - name: from
          in: query
          description: the date from which we want to get the events (strict gt -> does not include exact same date
          required: false
          type: string
          format: date-time
        - name: to
          in: query
          description: the date to which we want to get the events (strict lt -> does not include exact same date
          required: false
          type: string
          format: date-time
        - name: withDismissed
          in: query
          description: show the dismissed events
          required: false
          type: boolean
        - name: showHidden
          in: query
          description: show the non visible events
          required: false
          type: boolean
        - name: important
          in: query
          description: only important events
          required: false
          type: boolean
        - name: sev
          in: query
          description: only important events
          required: false
          type: string
        - name: tag
          in: query
          description: only events matching the given tag. Can have several tags in the request
          required: false
          type: string
        - name: count
          in: query
          description: the max count of messages
          required: false
          type: integer
          format: int32
        - name: after
          in: query
          description: the timestamp after which we want the elements
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/EventV3IO'
      security:
        - api_key_param: []
        - api_key_header: []
securityDefinitions:
  api_key_param:
    type: apiKey
    name: api-key
    in: query
  api_key_header:
    type: apiKey
    name: api-key
    in: header
definitions:
  BookmarkV3IO:
    type: object
    properties:
      disabled:
        type: boolean
      customer:
        type: string
      href:
        type: string
      rank:
        type: string
      photoUrl:
        type: string
      tooltip:
        type: string
      landingPage:
        type: boolean
      glyphicon:
        type: string
      text:
        type: string
  StatsV3IO:
    type: object
    properties:
      notClassified:
        type: integer
        format: int32
      from:
        type: string
      tagsByteCount:
        $ref: '#/definitions/Map'
      networkByteCount:
        $ref: '#/definitions/Map'
      totalByte:
        type: integer
        format: int32
      totalMsg:
        type: integer
        format: int32
      truncated:
        type: boolean
      to:
        type: string
  LayoutV3IO:
    type: object
    properties:
      id:
        type: integer
        format: int64
      reportId:
        type: string
      uplinkTemplate:
        type: string
      extSource:
        $ref: '#/definitions/ExtSource'
      ieis:
        type: array
        items:
          $ref: '#/definitions/IeiV3IO'
      layoutFMTs:
        type: string
      layoutDBs:
        type: string
      name:
        type: string
      actype:
        type: string
      dashboardIds:
        type: array
        items:
          type: string
      ifts:
        type: array
        items:
          $ref: '#/definitions/IftV3IO'
      dtype:
        type: string
      dashboards:
        type: array
        items:
          $ref: '#/definitions/DashboardV3IO'
      canUseAlphaCallUps:
        type: boolean
      engineType:
        type: string
      params:
        type: array
        items:
          $ref: '#/definitions/ParameterV3IO'
  RuleV3IO:
    type: object
    properties:
      id:
        type: integer
        format: int64
      db_id:
        type: integer
        format: int64
      svgElt:
        type: string
      order:
        type: integer
        format: int32
      name:
        type: string
      formula:
        type: string
      autoMap:
        type: boolean
  DashboardV3IO:
    type: object
    properties:
      rules:
        type: array
        items:
          $ref: '#/definitions/RuleV3IO'
      name:
        type: string
      svg:
        type: string
      symbols:
        type: array
        items:
          $ref: '#/definitions/DashboardSymbolV3IO'
      eltMap:
        $ref: '#/definitions/Map'
      id:
        type: string
  IftV3IO:
    type: object
    properties:
      variables:
        type: array
        items:
          type: string
      id:
        type: integer
        format: int64
      code:
        type: string
      name:
        type: string
      srcId:
        type: string
      language:
        type: string
      acFamilly:
        type: string
      sev:
        type: string
        enum:
          - IGNORE
          - CREW
          - WARNING
          - FAULT
          - ERROR
          - INFO
      formula:
        type: string
      skip:
        type: boolean
      srcKind:
        type: string
  TrendBundleV3IO:
    type: object
    properties:
      id:
        type: integer
        format: int64
      jsonConf:
        type: string
      coolname:
        type: string
  DashboardSymbolV3IO:
    type: object
    properties:
      isTag:
        type: boolean
      functions:
        type: array
        items:
          $ref: '#/definitions/DashboardSymbolFunctionV3IO'
      id:
        type: string
      autoFctId:
        type: integer
        format: int64
      svg:
        type: string
      name:
        type: string
  IeiParamV3IO:
    type: object
    properties:
      sampleValue:
        type: string
      param:
        $ref: '#/definitions/ParameterV3IO'
      offset:
        type: integer
        format: int64
      dateParam:
        type: string
      conversion:
        type: number
        format: double
      datePattern:
        type: string
      idx:
        type: integer
        format: int32
      formula:
        type: string
      isNumber:
        type: boolean
      length:
        type: integer
        format: int64
  String:
    type: object
    properties: {}
  EventV3IO:
    type: object
    properties:
      to:
        type: string
      status:
        type: string
      reg:
        type: string
      computedDate:
        type: string
      fwot:
        $ref: '#/definitions/FwotV3IO'
      tags:
        type: array
        items:
          $ref: '#/definitions/TagV3IO'
      network:
        type: string
      id:
        type: string
      comment:
        type: string
      dashboardIds:
        type: array
        items:
          type: string
      title:
        type: string
      data:
        type: string
      sharingId:
        type: string
      station:
        type: string
      phase:
        type: string
      analysis:
        type: array
        items:
          type: integer
      flightCount:
        type: integer
        format: int32
      samples:
        type: array
        items:
          $ref: '#/definitions/SampleV3IO'
      visible:
        type: boolean
      receptionDate:
        type: string
      dateIsEstimated:
        type: boolean
      layoutId:
        type: integer
        format: int64
      lastUpdate:
        type: integer
        format: int64
      from:
        type: string
      style:
        type: string
      severity:
        type: string
        enum:
          - IGNORE
          - CREW
          - WARNING
          - FAULT
          - ERROR
          - INFO
      flightId:
        type: string
      klass:
        type: string
      category:
        type: string
      dataId:
        type: string
      description:
        type: string
      dismisser:
        type: string
      transmissionDate:
        type: string
      sumUp:
        type: string
      extUrl:
        type: string
  ParameterV3IO:
    type: object
    properties:
      maxScale:
        type: number
        format: double
      maxOK:
        type: number
        format: double
      minScale:
        type: number
        format: double
      actypeName:
        type: string
      address:
        type: string
      minOK:
        type: number
        format: double
      type:
        type: string
        enum:
          - TEXT
          - NUMBER
          - JSON
      ifts:
        type: array
        items:
          $ref: '#/definitions/IftV3IO'
      description:
        type: string
      name:
        type: string
      id:
        type: integer
        format: int64
      isKey:
        type: boolean
  FwotV3IO:
    type: object
    properties:
      status:
        type: string
      alt:
        type: number
        format: float
      eta:
        type: string
      category:
        type: string
      photoUrl:
        type: string
      from:
        type: string
      to:
        type: string
      coolName:
        type: string
      lon:
        type: number
        format: float
      etd:
        type: string
      posDate:
        type: string
      reg:
        type: string
      statusDashboard:
        type: integer
        format: int64
      type:
        type: string
      extUrl:
        type: string
      alert:
        $ref: '#/definitions/EventV3IO'
      lat:
        type: number
        format: float
      properties:
        $ref: '#/definitions/Map'
  UserV3IO:
    type: object
    properties:
      profile:
        type: string
      login:
        type: string
      trigram:
        type: string
      bigdata:
        type: boolean
      base:
        type: string
      airline:
        type: string
  SampleV3IO:
    type: object
    properties:
      type:
        type: string
      fwot:
        $ref: '#/definitions/FwotV3IO'
      msg:
        $ref: '#/definitions/EventV3IO'
      date:
        type: string
      name:
        type: string
      value:
        type: string
      maxScale:
        type: number
        format: double
      timelabel:
        type: string
      msgId:
        type: integer
        format: int64
      minScale:
        type: number
        format: double
      minOK:
        type: number
        format: double
      maxOK:
        type: number
        format: double
      id:
        type: integer
        format: int64
      paramId:
        type: integer
        format: int64
      state:
        type: string
  TagV3IO:
    type: object
    properties:
      id:
        type: string
  ErrorDao:
    type: object
    properties:
      msg:
        type: string
      url:
        type: string
      code:
        type: integer
        format: int32
  ExtSource:
    type: object
    properties:
      varName:
        type: string
      poolPeriodSecond:
        type: integer
        format: int32
      urlTemplate:
        type: string
      webhook:
        type: string
      headers:
        $ref: '#/definitions/Map'
      password:
        type: string
      method:
        type: string
        enum:
          - GET
          - POST
          - PUT
          - DELETE
          - OPTIONS
          - PATCH
          - TRACE
          - HEAD
      login:
        type: string
      bodyTemplate:
        type: string
  Map:
    type: object
    properties: {}
  DashboardSymbolFunctionV3IO:
    type: object
    properties:
      params:
        type: string
      id:
        type: integer
        format: int64
      body:
        type: string
      name:
        type: string
  ConstantV3IO:
    type: object
    properties:
      description:
        type: string
      name:
        type: string
      value:
        type: string
      id:
        type: integer
        format: int64
  IeiV3IO:
    type: object
    properties:
      code:
        type: string
      idxMax:
        type: integer
        format: int64
      timeOffsetFormula:
        type: string
      timeLabel:
        type: string
      idxMin:
        type: integer
        format: int64
      length:
        type: integer
        format: int64
      param:
        type: array
        items:
          $ref: '#/definitions/IeiParamV3IO'
      isHeader:
        type: boolean
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
host: demo.flightwatching.com
basePath: /fleet
schemes:
  - https